import{G as c,H as l,I as d,J as u,K as o,L as w,z as g,A as h}from"./index-8e0cf509.js";class m{}class a extends m{signInEmailAndPassword(r,e){return c(o,r,e)}signInWithGoogle(){return l(o,w)}registerUserWithEmailAndPassword(r,e){return d(o,r,e)}logout(){return u(o)}}class i{static signInWithEmailAndPassword(r,e){return new a().signInEmailAndPassword(r,e)}static signInWithGoogle(){return new a().signInWithGoogle()}static registerUserWithEmailAndPassword(r,e){return new a().registerUserWithEmailAndPassword(r,e)}static logout(){return new a().logout()}}class P{static execute(r,e){return i.signInWithEmailAndPassword(r,e)}}class A{static execute(r,e){return i.registerUserWithEmailAndPassword(r,e)}}const E=(s,r)=>s===r;class W{static execute(){return i.logout()}}class f{static execute(){return i.signInWithGoogle()}}const n={email:"",password:"",confirmPassword:""},y=g("auth",()=>{const s=h({...n}),r=()=>{s.email=n.email,s.password=n.password,s.confirmPassword=n.confirmPassword};return{authForm:s,loginWithEmailAndPassword:async()=>{try{const t=await P.execute(s.email,s.password);if(!t)throw new Error("email or password incorrect");return t}catch(t){console.log(t),r()}},loginWithGoogle:async()=>{try{const t=await f.execute();if(!t)throw new Error("User not found");return t}catch(t){console.log(t),r()}},logout:()=>W.execute(),registerWithEmailAndPassword:async()=>{try{if(s.password.length<6&&s.confirmPassword.length<6)throw new Error("Password must be at least 6 characters");if(!E(s.password,s.confirmPassword))throw new Error("Password not consistent");const t=await A.execute(s.email,s.password);if(!t)throw new Error("Not is possible create");return t}catch(t){console.log(t),r()}},resetForm:r}});export{y as u};
